name: Release Draft

on:
    workflow_dispatch:

env:
    FLUTTER_VERSION: "3.22.2"

jobs:
    build:
        runs-on: ubuntu-20.04
        outputs:
            version: ${{ steps.get_version.outputs.version }}
            # notes: ${{ steps.get_notes.outputs.notes }}

        steps:
            - uses: actions/checkout@v4

            - name: Get version from pubspec.yaml
              id: get_version
              run: |
                  VERSION=$(sed -n 's/^version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p' pubspec.yaml)
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            # - name: Get latest notes from GHANGELOG.md
            #   id: get_notes
            #   run: |
            #       NOTES=$(awk '/^## /{if(p)exit; p=1; next}p' CHANGELOG.md)
            #       echo "notes=$NOTES" >> $GITHUB_OUTPUT

    build_apk:
        needs: build
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Decode key.properties file
              env:
                  ENCODED_STRING: ${{ secrets.ANDROID_KEY_PROPERTIES }}
              run: echo $ENCODED_STRING | base64 -di > android/key.properties

            - name: Decode android-keystore.jks file
              env:
                  ENCODED_STRING: ${{ secrets.ANDROID_KEY_STORE }}
              run: mkdir secrets && echo $ENCODED_STRING | base64 -di > android/android-keystore.jks

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"

            - name: Install Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: ${{ env.FLUTTER_VERSION }}

            - name: Dependencies
              run: flutter pub get

            - name: Build APK
              run: flutter build apk --release --split-per-abi --target-platform android-arm,android-arm64,android-x64

            - name: Move and Rename Apk
              env:
                  APK_NAME: "Rpass-${{ needs.build.outputs.version }}"
              run: |
                  base_path=build/app/outputs/flutter-apk/
                  apk_name=${{ env.APK_NAME }}
                  mkdir dist/apks -p
                  rm -rf dist/apks/*
                  cp $base_path/app-arm64-v8a-release.apk dist/apks/$apk_name-arm64-v8a.apk
                  cp $base_path/app-armeabi-v7a-release.apk dist/apks/$apk_name-armeabi-v7a.apk
                  cp $base_path/app-x86_64-release.apk dist/apks/$apk_name-x86_64.apk

            - name: Upload Apk
              uses: actions/upload-artifact@v4
              with:
                  name: apks
                  path: dist/apks/*

    release:
        needs:
            - build
            - build_apk
        runs-on: ubuntu-20.04

        steps:
            - uses: actions/checkout@v4

            - name: Get latest Notes
              uses: yashanand1910/standard-release-notes@v1.4.0
              id: get_release_notes
              with:
                  version: ${{ needs.build.outputs.version }}

            - name: Download Apk
              uses: actions/download-artifact@v4
              with:
                  name: apks
                  path: dist/apks

            - name: Draft release
              uses: softprops/action-gh-release@v2
              with:
                  files: dist/apks/*
                  draft: true
                  generate_release_notes: true
                  fail_on_unmatched_files: true
                  body: ${{ steps.get_release_notes.outputs.release_notes }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag_name: v${{ needs.build.outputs.version }}

    sync_gitee:
        needs:
            - build
            - build_apk
            - release
        runs-on: ubuntu-20.04

        steps:
            - uses: actions/checkout@v4

            - name: Get latest Notes
              uses: yashanand1910/standard-release-notes@v1.5.0
              id: get_release_notes
              with:
                  version: ${{ needs.build.outputs.version }}

            - name: Install Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"

            - name: pip install requests
              run: |
                  python -m pip install requests

            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: apks
                  path: dist/apks

            - name: Sync Release Gitee
              env:
                  ACCESS_TOKEN: ${{ secrets.GITEE_ACCESS_TOKEN }}
                  OWNER: do_yzr
                  REPO: test
                  TAG_NAME: v${{ needs.build.outputs.version }}
                  NAME: ${{ needs.build.outputs.version }}
                  BODY: ${{ steps.get_release_notes.outputs.release_notes }}
                  PRERELEASE: 0
                  TARGET_COMMITISH: master

              run: >
                  python ./script/sync-gitee-release.py
                  $ACCESS_TOKEN
                  $OWNER
                  $REPO
                  $TAG_NAME
                  $NAME
                  "$BODY"
                  $PRERELEASE
                  $TARGET_COMMITISH
